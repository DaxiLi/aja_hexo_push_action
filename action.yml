name: "auto push hexo to qiniu"
author: Yuan Jie (moogila@outlook.com)
description: "push the hexo static file to qiniu automatic."
inputs:
  bucket:
    description: "Name of the qiniu bucket"
    required: true
  access-key:
    description: "Access-key of qiniu"
    required: true
  secret-key:
    description: "Secret-key of qiniu"
    required: true
  hexo-cli-version:
    description: "The hexo cli version in your local env"
    required: true
    default: "4.3.0"
  domain:
    description: "Your website domain(http://example.com/)"
    required: true
  hexo-config-path:
    description: hexo config file path
    required: true
    default: "none"
  theme-config-path:
    description: theme config file
    required: true
    default: "none"
  theme-repository:
    description: the repository of theme
    required: false
    default: "none"
  qiniu-zone: 
    description: qiniu zone code
    required: true
    default: "none"
  theme-name:
    description: theme name
    required: true
    default: "theme"
  refresh-on: 
    description: upload all files
    required: true
    default: "no"
  package-file: 
    description: package
    required: true
    default: "none"
  package-lock-file:
    description:  package-lock-file
    required: true
    default: "none"
  debug:
    description:  debug
    required: true
    default: "none"


runs:
  using: "composite"
  steps:
    - name: ------------------START---------------------------
      run:  "echo \"run with inputs [ bucket: ${{inputs.bucket}} , access-key: ${{inputs.access-key}} ,secret-key:${{inputs.secret-key}}, hexo-cli-version:${{inputs.hexo-cli-version}}, domain:${{inputs.domain}}, hexo-config-path:${{inputs.hexo-config-path}}, theme-config-path:${{inputs.theme-config-path}},  theme-repository:${{inputs.theme-repository}}, qiniu-zone:${{inputs.qiniu-zone}}, theme-name:${{inputs.theme-name}},  refresh-on: ${{inputs.refresh-on}}, package: ${{inputs.package-file}}, package-lock: ${{inputs.package-lock-file}}, debug: ${{inputs.debug}}] \""
      shell: bash

    - name: ----------------- setup nodejs--------------------
      uses: actions/setup-node@v2
      with:
        node-version: 16.x

    - uses: actions/checkout@v3
      with:
        repository: DaxiLi/aja_hexo_push_action
        fetch-depth: 1
        path: blog

    - name: ------------- checkout source --------------------
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        path: source

    - name: ------------- checkout theme ---------------------
      uses: actions/checkout@v3
      if: ${{ inputs.theme-repository }} != '' || ${{ inputs.theme-repository }} != 'none'
      with:
        repository: ${{inputs.theme-repository}}
        fetch-depth: 1
        path: theme



    - name: ------------- install hexo  ----------------------
      run: npm install -g hexo-cli@${{ inputs.hexo-cli-version }}
      shell: bash
      working-directory: blog



    - name: -------------------- config ----------------------
      run: |
        rm -rf blog/hexo/source && cp -rf source blog/hexo/
      shell: bash

    - if: ${{ inputs.theme-repository }} != '' || ${{ inputs.theme-repository }} != 'none'
      run: |
        rm -rf blog/hexo/themes/* && cp -rf theme blog/hexo/themes/${{inputs.theme-name}}
      shell: bash

    - name: move config
      if: ${{inputs.hexo-config-path}} != '' && ${{inputs.hexo-config-path}} != 'none'
      run: cp source/${{inputs.hexo-config-path}} blog/hexo/_config.yml
      shell: bash

    - if: ${{inputs.theme-config-path}} != '' && ${{inputs.theme-config-path}} != 'none'
      run: |
        cp -rf source/${{inputs.theme-config-path}}  blog/hexo/themes/${{inputs.theme-name}}/_config.yml
      shell: bash

    - if: ${{inputs.package-file}} != '' && ${{inputs.package-file}} != 'none'
      run: |
        rm -rf blog/hexo/package.json && cp -f source/${{inputs.package-file}}  blog/hexo/package.json
      shell: bash

    - if: ${{inputs.package-lock-file}} != '' && ${{inputs.package-lock-file}} != 'none'
      run: |
        rm -rf blog/hexo/package-lock.json && cp -rf source/${{inputs.package-lock-file}}  blog/hexo/package-lock.json
      shell: bash

    - if: ${{inputs.debug}} == "debug"
      run: cat blog/hexo/package.json blog/hexo/package-lock.json
      shell: bash

    - if: ${{inputs.debug}} == "debug"
      run: echo "${{inputs.debug}} == "debug"  true??"
      shell: bash

    - name: ------------- install dependencies ---------------
      run: npm ci
      shell: bash
      working-directory: blog

    - name: ------------ install dependencies  ---------------
      run: npm ci
      shell: bash
      working-directory: blog/hexo


    - name: -------------------- clean ddirectory ---------------
      run: rm -rf blog/hexo/source/.github blog/hexo/source/.git
      shell: bash

    - name: ----------------- clean public file --------------
      run: hexo clean
      shell: bash
      working-directory: blog/hexo/    
      
    - name: ----------------- generate public file --------------
      run: hexo generate
      shell: bash
      working-directory: blog/hexo/

    - name: ----------------- generate public file --------------
      run: hexo generate
      shell: bash
      working-directory: blog/hexo/


    - name: ---------------- list  the generate files  -------------
      run: |
        ls -ll blog/hexo blog/hexo/public  blog/hexo/themes  blog/hexo/themes/cards
      shell: bash

    - name: --------------------- get manifest.json --------------------
      if: ${{inputs.domain}} != '' && ${{inputs.domain}} != 'none'
      run: wget --no-check-certificate ${{inputs.domain}}manifest.json -O ./manifest.json
      shell: bash

    - name: ---------------------------------------- upload  -------------------
      run: node blog/main.js ${{inputs.bucket}} ${{inputs.access-key}} ${{inputs.secret-key}} blog/hexo/public ${{inputs.domain}} ${{inputs.qiniu-zone}} ./manifest.json ${{inputs.refresh-on}}
      shell: bash
